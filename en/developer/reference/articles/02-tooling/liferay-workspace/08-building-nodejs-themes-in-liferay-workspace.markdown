---
header-id: building-node-js-themes-in-liferay-workspace
---

# Building Node.js Themes in Liferay Workspace

[TOC levels=1-4]

<aside class="alert alert-info">
  <span class="wysiwyg-color-blue120">This document has been updated and ported to <a href="
https://learn.liferay.com/dxp/latest/en/building-applications/tooling/liferay-workspace/creating-code-with-liferay-workspace.html
">Liferay Learn</a> and is no longer maintained here.</span>
</aside>

Liferay Workspace reserves the `themes` folder only for themes that are created 
with the Themes Generator. There are no Blade CLI-provided commands or Maven 
archetypes to generate a theme for this folder. You must leverage the 
[Liferay Theme Generator](/docs/7-2/reference/-/knowledge_base/r/theme-generator) 
from within the `themes` folder to create them; you can also copy a generated
theme into the folder.

You'll demo this theme management capability next. Be sure the Liferay Theme
Generator's required tooling is installed.

1.  Navigate to your workspace's `themes` folder and run the following command:

    ```bash
    yo liferay-theme
    ```

    Follow the prompts to create your theme.

2.  Navigate into your new theme and run

    ```bash
    ./gradlew build
    ```

    Liferay Workspace builds the front-end theme using Gradle. Under the hood,
    Liferay's 
    [Node Gradle Plugin](/docs/7-2/reference/-/knowledge_base/r/node-gradle-plugin)
    is applied and used to build your theme.

3.  Workspace is smart enough to differentiate between theme types. For
    instance, you can't copy a theme built with the Theme Generator into the
    `wars` folder and expect it to build. You can test if your project is
    recognized by workspace by running this command from workspace's root
    folder:

    ```bash
    ./gradlew projects
    ```

    Your CLI should display your new theme under the `themes` project.

    ```bash
    Root project 'liferay-workspace'
    +--- Project ':themes'
    |    \--- Project ':themes:my-generated-theme'
    ```

    If you moved a WAR-style theme (Gradle/Maven-based) into the `themes`
    folder, it is not recognized by the Gradle `projects` command.

| **Note:** Workspace identifies whether a theme was generated by the Theme
| Generator by checking whether it has a `package.json` file. Any theme without
| this file is not compatible in the `themes` folder.

Excellent! You learned how generated themes are recognized in workspace and 
where they should reside. For more information on building Gradle/Maven-based
themes in workspace, see its dedicated
[article](/docs/7-2/reference/-/knowledge_base/r/building-gradle-maven-themes-in-liferay-workspace).
